#!/usr/bin/env node

const count = parseInt(process.argv[process.argv.length - 1]);
if (isNaN(count)) {
  console.log("usage: bin/genWithHocs <number>");
  process.exit(1);
}

function gen(length) {
  return `// prettier-ignore
export function withHocs<${Array.from({
    length,
  })
    .map((v, i) => `PropsIn${i} extends {}`)
    .join(", ")}, PropsOut extends {}>(
  ${Array.from({
    length,
  })
    .map(
      (v, i) =>
        `hoc${i}: (Component: React.ComponentType<PropsIn${i}>) => React.FunctionComponent<${
          i == length - 1 ? "PropsOut" : `PropsIn${i + 1}`
        }>,`
    )
    .join("\n  ")}
): (Component: React.ComponentType<PropsIn0>) => React.ComponentType<PropsOut>;`;
}

for (let i = 0; i < count; i++) {
  console.log(gen(i + 1));
  if (i != count - 1) {
    console.log();
  }
}
